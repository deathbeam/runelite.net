{"version":3,"sources":["components/footer.js","components/layout.js","components/runescape-map.js","routes/tile-show.js"],"names":["Footer","id","class","href","getBaseUrl","Layout","children","fullWidth","props","style","maxWidth","DEFAULT_VIEW","MainTileLayer","TileLayer","extend","initialize","url","options","this","_url","setOptions","getTileUrl","coords","Util","template","source","mapId","zoom","z","plane","x","y","createTile","done","tile","prototype","call","onerror","error","preventDefault","fromLatLng","latLng","parseInt","lng","lat","toLatLng","mapTile","num","regionId","regionX","regionY","jsColor","intColor","join","argb","slice","label","color","prepareMap","map","defaultView","setView","locked","mouseRect","rectangle","fillColor","fillOpacity","weight","interactive","addTo","on","e","mousePos","latlng","setBounds","locationControl","Control","position","onAdd","container","DomUtil","create","button","updateButton","region","center","getCenter","rsCenter","rsRegion","regions","includes","name","findCurrentRegion","hidden","innerHTML","resetButton","DomEvent","disableClickPropagation","addListener","viewport","fitBounds","lockButton","setMaxBounds","removeClass","addClass","TileMapHandler","tiles","useMap","layer","noWrap","minZoom","maxNativeZoom","maxZoom","errorTileUrl","tileLayer","removeFrom","bringToBack","length","tilesX","t","tilesY","minX","Math","min","maxX","max","minY","maxY","undefined","bounds","pathOptions","RuneScapeMap","maxBounds","maxBoundsViscosity","attributionControl","whenCreated","crs","CRS","Simple","connect","state","b64","decodedData","jsonData","b64string","window","location","hash","substring","atob","JSON","parse","ignored","data","title","hero","description"],"mappings":"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","file":"static/js/1.a475e88b.chunk.js","sourcesContent":["import { h } from 'preact'\nimport { getBaseUrl } from '../util'\n\nconst Footer = () => (\n  <section id=\"footer\">\n    <div class=\"content-section\">\n      <footer>\n        <hr />\n        Developed with <i class=\"fas fa-heart\" /> and{' '}\n        <i class=\"fas fa-coffee\" /> using{' '}\n        <a href=\"https://getbootstrap.com/\">Bootstrap</a>,{' '}\n        <a href=\"https://reactjs.org/\">React</a> and{' '}\n        <a href=\"https://fontawesome.com/\">Font Awesome</a>\n        <a href={`${getBaseUrl()}/atom.xml`} class=\"float-right\">\n          <i class=\"fas fa-rss\" /> Subscribe via RSS\n        </a>\n      </footer>\n    </div>\n  </section>\n)\n\nexport default Footer\n","import { h } from 'preact'\nimport Footer from './footer'\n\nconst Layout = ({ children, fullWidth, ...props }) => {\n  props.class = props.class ? 'container ' + props.class : 'container'\n  props.style = {\n    ...(props.style || {}),\n    maxWidth: fullWidth ? '100%' : ''\n  }\n\n  return (\n    <div {...props} id=\"layout\">\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","import { h, Fragment } from 'preact'\nimport {\n  rectangle,\n  setOptions,\n  Control,\n  DomUtil,\n  DomEvent,\n  TileLayer,\n  Util,\n  CRS\n} from 'leaflet'\nimport {\n  MapContainer,\n  Rectangle,\n  Tooltip,\n  ImageOverlay,\n  useMap\n} from 'react-leaflet'\nimport regions from '../_data/regions'\nimport './runescape-map.scss'\n\nconst BOUNDS_TOLERANCE = 4\nconst MIN_ZOOM = -4\nconst MAX_ZOOM = 8\nconst MAX_NATIVE_ZOOM = 2\nconst DEFAULT_ZOOM = 0\nconst DEFAULT_VIEW = [3225, 3219]\n\nconst MainTileLayer = TileLayer.extend({\n  initialize: function (url, options) {\n    this._url = url\n    setOptions(this, options)\n  },\n\n  getTileUrl: function (coords) {\n    return Util.template(this._url, {\n      source: this.options.source,\n      mapId: -1,\n      zoom: coords.z,\n      plane: this.options.plane,\n      x: coords.x,\n      y: -(1 + coords.y)\n    })\n  },\n\n  createTile: function (coords, done) {\n    let tile = TileLayer.prototype.createTile.call(this, coords, done)\n    tile.onerror = error => error.preventDefault()\n    return tile\n  }\n})\n\nconst fromLatLng = latLng => {\n  return {\n    x: parseInt(latLng.lng),\n    y: parseInt(latLng.lat)\n  }\n}\n\nconst toLatLng = (x, y) => {\n  return [y, x]\n}\n\nconst findCurrentRegion = map => {\n  const center = map.getCenter()\n  const rsCenter = fromLatLng(center)\n  const rsRegion = ((rsCenter.x >> 6) << 8) | (rsCenter.y >> 6)\n\n  for (const region of regions) {\n    if (region.regions.includes(rsRegion)) {\n      return region.name\n    }\n  }\n\n  return ''\n}\n\nconst toColor = num => {\n  num >>>= 0\n  const b = num & 0xff,\n    g = (num & 0xff00) >>> 8,\n    r = (num & 0xff0000) >>> 16,\n    a = ((num & 0xff000000) >>> 24) / 255\n  return 'rgba(' + [r, g, b, a].join(',') + ')'\n}\n\nconst mapTile = tile => {\n  const regionId = tile['regionId']\n  const regionX = tile['regionX']\n  const regionY = tile['regionY']\n  let jsColor = '#ffffff'\n\n  if (tile['color']) {\n    const intColor = tile['color']['value']\n\n    if (intColor) {\n      jsColor = toColor(intColor)\n    } else if (tile['color']) {\n      const argb = tile['color']\n      jsColor = '#' + argb.slice(3, 9) + argb[1] + argb[2]\n    }\n  }\n\n  const x = ((regionId >>> 8) << 6) + regionX\n  const y = ((regionId & 0xff) << 6) + regionY\n  const z = tile['z']\n\n  return {\n    x,\n    y,\n    z,\n    label: tile['label'],\n    color: jsColor\n  }\n}\n\nconst prepareMap = map => {\n  const defaultView = toLatLng(DEFAULT_VIEW[0], DEFAULT_VIEW[1])\n  map.setView(defaultView)\n  map.locked = true\n\n  const mouseRect = rectangle(\n    [\n      [0, 0],\n      [1, 1]\n    ],\n    {\n      color: '#1e1e1e',\n      fillColor: '#1e1e1e',\n      fillOpacity: 0.3,\n      weight: 1,\n      interactive: false\n    }\n  )\n\n  mouseRect.addTo(map)\n\n  map.on('mousemove', e => {\n    const mousePos = fromLatLng(e.latlng)\n    mouseRect.setBounds([\n      toLatLng(mousePos.x, mousePos.y),\n      toLatLng(mousePos.x + 1, mousePos.y + 1)\n    ])\n  })\n\n  const locationControl = new Control({ position: 'topright' })\n  locationControl.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n\n    const button = DomUtil.create('span', 'leaflet-custom-control', container)\n    const updateButton = () => {\n      const region = findCurrentRegion(map)\n      button.hidden = !region\n      button.innerHTML = region\n    }\n\n    updateButton()\n    map.on('move', updateButton)\n    return container\n  }\n\n  locationControl.addTo(map)\n\n  const resetButton = new Control({ position: 'topleft' })\n  resetButton.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n    const button = DomUtil.create('a', 'fas fa-redo', container)\n\n    DomEvent.disableClickPropagation(button).addListener(\n      button,\n      'click',\n      () =>\n        map.viewport\n          ? map.fitBounds(map.viewport)\n          : map.setView(defaultView, DEFAULT_ZOOM),\n      button\n    )\n\n    return container\n  }\n\n  resetButton.addTo(map)\n\n  const lockButton = new Control({ position: 'topleft' })\n  lockButton.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n    const button = DomUtil.create('a', 'fas fa-lock', container)\n\n    DomEvent.disableClickPropagation(button).addListener(\n      button,\n      'click',\n      () => {\n        if (map.locked) {\n          map.setMaxBounds(defaultView)\n          map.locked = false\n          DomUtil.removeClass(button, 'fa-lock')\n          DomUtil.addClass(button, 'fa-lock-open')\n        } else if (map.viewport) {\n          map.fitBounds(map.viewport)\n          map.setMaxBounds(map.viewport)\n          map.locked = true\n          DomUtil.removeClass(button, 'fa-lock-open')\n          DomUtil.addClass(button, 'fa-lock')\n        }\n      }\n    )\n\n    return container\n  }\n\n  lockButton.addTo(map)\n}\n\nconst TileMapHandler = ({ tiles, plane }) => {\n  const map = useMap()\n\n  const layer = new MainTileLayer(\n    'https://raw.githubusercontent.com/mejrs/mejrs.github.io/master/layers/{source}/-1/{zoom}/{plane}_{x}_{y}.png',\n    {\n      noWrap: true,\n      plane: plane,\n      source: 'map_squares_osrs',\n      minZoom: MIN_ZOOM,\n      maxNativeZoom: MAX_NATIVE_ZOOM,\n      maxZoom: MAX_ZOOM,\n      errorTileUrl:\n        'https://raw.githubusercontent.com/mejrs/mejrs.github.io/master/layers/alpha_pixel.png'\n    }\n  )\n\n  if (map.tileLayer) {\n    map.tileLayer.removeFrom(map)\n  }\n\n  map.tileLayer = layer\n  map.tileLayer.addTo(map).bringToBack()\n\n  if (tiles.length > 0) {\n    const tilesX = tiles.map(t => t.x)\n    const tilesY = tiles.map(t => t.y)\n    const minX = Math.min(...tilesX) - BOUNDS_TOLERANCE\n    const maxX = Math.max(...tilesX) + BOUNDS_TOLERANCE\n    const minY = Math.min(...tilesY) - BOUNDS_TOLERANCE\n    const maxY = Math.max(...tilesY) + BOUNDS_TOLERANCE\n    const minCorner = toLatLng(minX, minY)\n    const maxCorner = toLatLng(maxX, maxY)\n    const viewport = [minCorner, maxCorner]\n\n    map.viewport = viewport\n    map.fitBounds(viewport)\n\n    if (map.locked || map.locked === undefined) {\n      map.setMaxBounds(viewport)\n    }\n  }\n\n  return tiles.map(tile => {\n    const pos = toLatLng(tile.x, tile.y)\n    const pos2 = toLatLng(tile.x + 1, tile.y + 1)\n    const bounds = [pos, pos2]\n    return (\n      <Fragment>\n        {tile.label && (\n          <ImageOverlay bounds={bounds} url={'/img/tile-text.png'} />\n        )}\n        <Rectangle\n          bounds={bounds}\n          pathOptions={{\n            color: tile.color,\n            fillColor: tile.color,\n            fillOpacity: 0.3,\n            weight: 1,\n            interactive: false\n          }}\n        >\n          {tile.label && <Tooltip>{tile.label}</Tooltip>}\n        </Rectangle>\n      </Fragment>\n    )\n  })\n}\n\nconst RuneScapeMap = ({ tiles }) => {\n  if (!tiles) {\n    tiles = []\n  }\n\n  tiles = tiles.map(mapTile)\n\n  const plane = tiles.length > 0 ? tiles[0].z : 0\n\n  return (\n    <Fragment>\n      <MapContainer\n        minZoom={MIN_ZOOM}\n        maxZoom={MAX_ZOOM}\n        maxBounds={[\n          [-1000, -1000],\n          [12800 + 1000, 12800 + 1000]\n        ]}\n        maxBoundsViscosity={0.5}\n        zoom={DEFAULT_ZOOM}\n        attributionControl={false}\n        whenCreated={prepareMap}\n        crs={CRS.Simple}\n      >\n        <TileMapHandler tiles={tiles} plane={plane} />\n      </MapContainer>\n    </Fragment>\n  )\n}\n\nexport default RuneScapeMap\n","import { h } from 'preact'\nimport Layout from '../components/layout'\nimport hero from '../_data/hero'\nimport Meta from '../components/meta'\nimport { connect } from 'react-redux'\nimport RuneScapeMap from '../components/runescape-map'\nimport './tag.css'\n\nconst TileShow = ({ data, tiles }) => {\n  return (\n    <Layout>\n      <Meta title={`Tile markers - ${hero.title}`} description={data} />\n      <section id=\"tiles\">\n        <div class=\"content-section tag-container\">\n          <RuneScapeMap tiles={tiles} />\n          <pre class=\"pre-select\">{data}</pre>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state, { b64 }) => {\n  let decodedData = ''\n  let jsonData = []\n\n  try {\n    const b64string = b64 || window.location.hash.substring(1)\n    decodedData = atob(b64string)\n    jsonData = JSON.parse(decodedData)\n  } catch (ignored) {}\n\n  return {\n    data: decodedData,\n    tiles: jsonData\n  }\n}\n\nexport default connect(mapStateToProps)(TileShow)\n"],"sourceRoot":""}